# coding: utf-8

"""
    The Jina Embedding Serving API

    This is the UniversalAPI to access all the Jina embedding models

    The version of the OpenAPI document: 0.0.86
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from jina_ai_python_sdk.pydantic.bulk_embedding_job_status import BulkEmbeddingJobStatus

class BulkEmbeddingJobResponse(BaseModel):
    # The user ID of the user who created the job
    user_id: str = Field(alias='user_id')

    # The name of the model to use
    model_name_: str = Field(alias='model_name')

    # The status of the job
    status: BulkEmbeddingJobStatus = Field(alias='status')

    # The name of the input file
    file_name: str = Field(alias='file_name')

    # The ID of the job
    _id: str = Field(alias='_id')

    # The model package ARN
    model_package_arn_: typing.Optional[str] = Field(None, alias='model_package_arn')

    # The email of the user who created the job
    user_email: typing.Optional[str] = Field(None, alias='user_email')

    # Time of creation of the job.
    created_at: typing.Optional[datetime] = Field(None, alias='created_at')

    # Time of completion of the job.
    completed_at: typing.Optional[datetime] = Field(None, alias='completed_at')

    # The error message of the job
    error: typing.Optional[str] = Field(None, alias='error')

    # The number of tokens used for the job
    used_token_count: typing.Optional[int] = Field(None, alias='used_token_count')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
